version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: lawyer-portal-db
    environment:
      POSTGRES_DB: lawyer_portal
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

  # MinIO (S3-compatible object storage)
  minio:
    image: minio/minio:latest
    container_name: lawyer-portal-storage
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin
    ports:
      - "9000:9000"
      - "9001:9001"
    volumes:
      - minio_data:/data
    command: server /data --console-address ":9001"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3

  # Create MinIO bucket
  createbuckets:
    image: minio/mc:latest
    container_name: lawyer-portal-create-buckets
    depends_on:
      - minio
    entrypoint: >
      /bin/sh -c "
      until (/usr/bin/mc config host add myminio http://minio:9000 minioadmin minioadmin) do echo '...waiting...' && sleep 1; done;
      /usr/bin/mc mb myminio/lawyer-portal-documents;
      /usr/bin/mc policy set public myminio/lawyer-portal-documents;
      exit 0;
      "

  # MailHog (SMTP testing)
  mailhog:
    image: mailhog/mailhog:latest
    container_name: lawyer-portal-mail
    ports:
      - "1025:1025"  # SMTP port
      - "8025:8025"  # Web UI port

  # ClamAV (Antivirus scanning)
  clamav:
    image: clamav/clamav:latest
    container_name: lawyer-portal-antivirus
    ports:
      - "3310:3310"
    volumes:
      - clamav_data:/var/lib/clamav
    environment:
      - CLAMAV_NO_FRESHCLAMD=false
    healthcheck:
      test: ["CMD", "/usr/local/bin/clamd", "--ping"]
      interval: 60s
      timeout: 10s
      retries: 3

  # Redis (for session storage and caching)
  redis:
    image: redis:7-alpine
    container_name: lawyer-portal-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 3s
      retries: 5

volumes:
  postgres_data:
  minio_data:
  clamav_data:
  redis_data:
